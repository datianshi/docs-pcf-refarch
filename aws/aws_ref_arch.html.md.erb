---
title: AWS Reference Architecture
owner: Customer0
---



This guide presents a reference architecture for Pivotal Cloud Foundry (PCF) on Amazon Web Services (AWS). 

See [PCF on AWS Requirements](../../customizing/aws.html) for general requirements for running PCF and specific requirements for running PCF on AWS.

![PCF on AWS Reference Architecture Diagram](PAS_AWS.png)

##<a id="lb-types"></a>  LB types

AWS offers Application Load Balancer (ALB) and Network Load Balancers (NLB). We recommend using Network Load Balancers for the added simplicity and security of leaving all encrypted traffic in place until the go routers. If you need to use Amazon Certificate Management or require more complex Layer 7 routing rules, the Network Load Balancer can be fronted or replaced by an ALB. 


##<a id="dns"></a> DNS

AWS provides route 53 for DNS resolution which can be used to host your PCF domains. 


##<a id="subnets"></a> Networks / Subnets / IP spacing planning

In AWS each AZ requires its own subnet of which the first 5 IPs are reserved. In addition to the standard networks in the reference architecture, if you are planning on using the AWS Service Broker you may want to create an additional set of networks to place RDS instances and other AWS managed instances. 

When building a VPC that is only public facing no special consideration is necessary for the use of IPs. However, when you want either the front-end of PCF to be accessible from the corporate network or the services running in PCF to be able to access corporate resources, you will need to either provide routable IPs to your VPC or utilize NAT.

In most cases organizations do not have the IP space necessary to allow PCF to be deployed in a consistent manner, we recommend utilizing a nat instance in the 100.64 address space to deploy a NAT instance and router so that the PCF deployment can use few IP addresses.



*   If you want internet ingress,  create the load balancers with Elastic IPs
*   If you want internet egress,  create the NAT Gateway towards the internet
*   If you want Corporate Ingress, create Load Balancers on Corporate Subnet
*   If you want Corporate Egress (access corporate resources), create the nat instance in the corporate subnet or if business requirements dictate make the entire VPC corporate routable


##<a id="c2c"></a>  C2C considerations

None


##<a id="ha"></a>  HA (how AZs are implemented)

None.


##<a id="storage-considerations"></a> Storage Considerations


##<a id="rds"></a> RDS/DBaaS

A single RDS Instance should be created for BOSH and PAS. After the instance is created, databases will need to be created for BOSH and PAS.


##<a id="blobstore"></a>  Blobstore storage accounts

Need buckets  created for:



*   BOSH Blobstore
*   Build Packs
*   Droplets
*   Packages
*   Resources

These bucket should have an associated role for read/write access.


##<a id="security"></a> Security Considerations

None


##<a id="identity-management"></a> Identity management

We recommend using Instance Profiles whenever possible   


##<a id="pas-components"></a> PAS components considerations  

None


##<a id="alternatives"></a> Alternative/variations of deployment and network layouts    

The following options are available for choosing your network topology:


Internet Egress


How do you want to allow the foundation to access the internet?



*   Corporate (or no internet)
*   NAT Gateway

Internet Ingress (Load Balancers associated with Elastic IPs)



*   Yes
*   No

Peering:



*   Isolated (normally internet-only facing)
*   Peered with corporate or other VPCs via Transit Gateway
*   Peered directly with other VPCs and corporate connections

Corporate Peering:



*   SNAT for Corporate Resources (3 corporate IPs necessary)
*   Routable IP Addresses for VPC (/20 or larger CIDR block necessary)

